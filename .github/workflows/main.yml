name: CI-CD pipeline for helm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:       

jobs:
  build:
    name: CI-CD
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3       

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Options: 'temurin', 'zulu', 'adopt', etc.
          java-version: '17'
      
      # # not able to perform in demo due to it is pvt repo
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Store your SonarQube token in GitHub Secrets
      #   with:
      #     args: >
      #       -Dsonar.projectKey=helm-demo
      #       -Dsonar.organization=krishnasravi
      #       -Dsonar.host.url=https://sonarcloud.io
          

      # Step 3: Build with Maven (Package)
      - name: Build with Maven
        run: mvn clean package -DskipTests
        
      # # not able to perform in demo due to it is pvt repo
      # - name: Veracode Scan
      #   env:
      #     VERACODE_API_ID: ${{ secrets.VERACODE_API_ID }}
      #     VERACODE_API_KEY: ${{ secrets.VERACODE_API_KEY }}
      #   run: |
      #     curl -O https://analysiscenter.veracode.com/api/5.0/VeracodeAPI.jar
      #     java -jar VeracodeAPI.jar -action uploadandscan -appname "helm-demo" -version "1.0" \
      #       -filepath "path/to/your/package.jar"  # Path to your package        
      
      # Step 4: Set up kubectl      
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.27.0' # default is latest stable
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: helm-demo
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Update kube config
        run: aws eks update-kubeconfig --name demo
      # - name: Deploy helm-demo app to EKS
      #   run: |
      #      kubectl apply -f ./manifest/.     

      - name: Deploy java helm chart to EKS
        run: |
          helm upgrade --install java ./java-chart     
